{"ast":null,"code":"var _jsxFileName = \"/home/advitya/Documents/Ireact/src/index.js\";\nfunction createElement(type, props) {\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n  return {\n    type,\n    props: {\n      ...props,\n      children: children.map(child => typeof child === \"object\" ? child : createTextElement(child))\n    }\n  };\n}\nfunction createTextElement(text) {\n  return {\n    type: \"TEXT_ELEMENT\",\n    props: {\n      nodeValue: text,\n      children: []\n    }\n  };\n}\nfunction render(element, container) {\n  wipRoot = {\n    dom: container,\n    props: {\n      children: [element]\n    }\n  };\n  nextUnitOfWork = wipRoot;\n}\nlet nextUnitOfWork = null;\nlet wipRoot = null;\nfunction commitRoot() {\n  commitWork(wipRoot.child);\n  currentRoot = wipRoot;\n  wipRoot = null;\n}\nfunction commitWork(fiber) {\n  if (!fiber) {\n    return;\n  }\n  const domParent = fiber.parent.dom;\n  domParent.appendChild(fiber.dom);\n  commitWork(fiber.child);\n  commitWork(fiber.sibling);\n}\nfunction createDom(fiber) {\n  const dom = element.type == \"TEXT_ELEMENT\" ? document.createTextNode(\"\") : document.createElement(element.type);\n  const isProperty = key => key !== \"children\";\n  Object.keys(element.props).filter(isProperty).forEach(name => {\n    dom[name] = element.props[name];\n  });\n  element.props.children.forEach(child => render(child, dom));\n  container.appendChild(dom);\n}\nfunction workLoop(deadline) {\n  let shouldYield = false;\n  while (nextUnitOfWork && !shouldYield) {\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    shouldYield = deadline.timeRemaining() < 1;\n  }\n  requestIdleCallback(workLoop);\n}\nrequestIdleCallback(workLoop);\nfunction performUnitOfWork(nextUnitOfWork) {\n  if (!fiber.dom) {\n    fiber.dom = createDom(fiber);\n  }\n  if (fiber.parent) {\n    fiber.parent.dom.appendChild(fiber.dom);\n  }\n  const elements = fiber.props.children;\n  let index = 0;\n  let prevSibling = null;\n  while (index < elements.length) {\n    const element = element[index];\n    const newFiber = {\n      type: element.type,\n      props: element.props,\n      parent: fiber,\n      dom: null\n    };\n    if (index === 0) {\n      fiber.child = newFiber;\n    } else {\n      prevSibling.sibling = newFiber;\n    }\n    prevSibling = newFiber;\n    index++;\n  }\n  if (fiber.child) {\n    return fiber.child;\n  }\n  let nextFiber = fiber;\n  while (nextFiber) {\n    if (nextFiber.sibling) {\n      return nextFiber.sibling;\n    }\n    nextFiber = nextFiber.parent;\n  }\n}\nconst Didact = {\n  createElement,\n  render\n};\n\n/** @jsx Didact.createElement */\nconst element = Didact.createElement(\"div\", {\n  style: \"background: salmon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 3\n  }\n}, Didact.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }\n}, \"Hello World\"), Didact.createElement(\"h2\", {\n  style: \"text-align:right\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }\n}, \"from Didact\"));\nconst container = document.getElementById(\"root\");\nDidact.render(element, container);","map":{"version":3,"names":["createElement","type","props","_len","arguments","length","children","Array","_key","map","child","createTextElement","text","nodeValue","render","element","container","wipRoot","dom","nextUnitOfWork","commitRoot","commitWork","currentRoot","fiber","domParent","parent","appendChild","sibling","createDom","document","createTextNode","isProperty","key","Object","keys","filter","forEach","name","workLoop","deadline","shouldYield","performUnitOfWork","timeRemaining","requestIdleCallback","elements","index","prevSibling","newFiber","nextFiber","Didact","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","getElementById"],"sources":["/home/advitya/Documents/Ireact/src/index.js"],"sourcesContent":["function createElement(type, props, ...children) {\n  return {\n    type,\n    props: {\n      ...props,\n      children: children.map((child) =>\n        typeof child === \"object\" ? child : createTextElement(child),\n      ),\n    },\n  };\n}\n\nfunction createTextElement(text) {\n  return {\n    type: \"TEXT_ELEMENT\",\n    props: {\n      nodeValue: text,\n      children: [],\n    },\n  };\n}\n\nfunction render(element, container) {\n  wipRoot = {\n    dom: container,\n    props: {\n      children: [element],\n    },\n  };\n  nextUnitOfWork = wipRoot;\n}\n\nlet nextUnitOfWork = null;\nlet wipRoot = null;\n\nfunction commitRoot() {\n  commitWork(wipRoot.child);\n  currentRoot = wipRoot;\n  wipRoot = null;\n}\n\nfunction commitWork(fiber) {\n  if (!fiber) {\n    return;\n  }\n  const domParent = fiber.parent.dom;\n  domParent.appendChild(fiber.dom);\n  commitWork(fiber.child);\n  commitWork(fiber.sibling);\n}\n\nfunction createDom(fiber) {\n  const dom =\n    element.type == \"TEXT_ELEMENT\"\n      ? document.createTextNode(\"\")\n      : document.createElement(element.type);\n  const isProperty = (key) => key !== \"children\";\n  Object.keys(element.props)\n    .filter(isProperty)\n    .forEach((name) => {\n      dom[name] = element.props[name];\n    });\n  element.props.children.forEach((child) => render(child, dom));\n  container.appendChild(dom);\n}\n\nfunction workLoop(deadline) {\n  let shouldYield = false;\n  while (nextUnitOfWork && !shouldYield) {\n    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);\n    shouldYield = deadline.timeRemaining() < 1;\n  }\n  requestIdleCallback(workLoop);\n}\n\nrequestIdleCallback(workLoop);\n\nfunction performUnitOfWork(nextUnitOfWork) {\n  if (!fiber.dom) {\n    fiber.dom = createDom(fiber);\n  }\n\n  if (fiber.parent) {\n    fiber.parent.dom.appendChild(fiber.dom);\n  }\n\n  const elements = fiber.props.children;\n  let index = 0;\n  let prevSibling = null;\n\n  while (index < elements.length) {\n    const element = element[index];\n    const newFiber = {\n      type: element.type,\n      props: element.props,\n      parent: fiber,\n      dom: null,\n    };\n\n    if (index === 0) {\n      fiber.child = newFiber;\n    } else {\n      prevSibling.sibling = newFiber;\n    }\n\n    prevSibling = newFiber;\n    index++;\n  }\n  if (fiber.child) {\n    return fiber.child;\n  }\n  let nextFiber = fiber;\n  while (nextFiber) {\n    if (nextFiber.sibling) {\n      return nextFiber.sibling;\n    }\n    nextFiber = nextFiber.parent;\n  }\n}\n\nconst Didact = {\n  createElement,\n  render,\n};\n\n/** @jsx Didact.createElement */\nconst element = (\n  <div style=\"background: salmon\">\n    <h1>Hello World</h1>\n    <h2 style=\"text-align:right\">from Didact</h2>\n  </div>\n);\nconst container = document.getElementById(\"root\");\nDidact.render(element, container);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}